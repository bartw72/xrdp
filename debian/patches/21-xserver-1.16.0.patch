Index: xrdp-bartw72/xorg/X11R7.6/rdp/Makefile
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/Makefile
+++ xrdp-bartw72/xorg/X11R7.6/rdp/Makefile
@@ -5,7 +5,9 @@ INCBASE = $(X11RDPBASE)/include
 LIBBASE = $(X11RDPBASE)/lib
 
 INSTALL = /usr/bin/install -c
-XSRCBASE = ../build_dir/xorg-server-1.9.3
+XSRCBASE = ../../../../xorg-server-1.16.0
+
+X11RDPBASE = $(XSRCBASE)/build-main
 
 OBJS = rdpmain.o rdpdraw.o rdpinput.o rdpmisc.o rdpup.o rdprandr.o \
 rdpCopyArea.o rdpPolyFillRect.o rdpPutImage.o rdpPolyRectangle.o \
@@ -22,43 +24,62 @@ fbcmap_mi.o
 #fbcmap_mi.o
 #fbcmap.o
 
-LIBS = $(XSRCBASE)/dbe/.libs/libdbe.a \
-	$(XSRCBASE)/dix/.libs/libdix.a \
-	$(XSRCBASE)/dix/.libs/libmain.a \
-	$(XSRCBASE)/fb/.libs/libfb.a \
-	$(XSRCBASE)/mi/.libs/libmi.a \
-	$(XSRCBASE)/os/.libs/libos.a \
-	$(XSRCBASE)/randr/.libs/librandr.a \
-	$(XSRCBASE)/record/.libs/librecord.a \
-	$(XSRCBASE)/render/.libs/librender.a \
-	$(XSRCBASE)/xkb/.libs/libxkb.a \
-	$(XSRCBASE)/Xext/.libs/libXext.a \
-	$(XSRCBASE)/Xi/.libs/libXi.a \
-	$(XSRCBASE)/glx/.libs/libglx.a \
-	$(XSRCBASE)/xfixes/.libs/libxfixes.a \
-	$(XSRCBASE)/damageext/.libs/libdamageext.a \
-	$(XSRCBASE)/miext/damage/.libs/libdamage.a \
-	librdp.a
+LIBS = $(X11RDPBASE)/composite/.libs/libcomposite.a \
+       $(X11RDPBASE)/config/.libs/libconfig.a \
+       $(X11RDPBASE)/Xext/.libs/libXext.a \
+       $(X11RDPBASE)/glx/.libs/libglx.a \
+       $(X11RDPBASE)/glx/.libs/libglxdri.a \
+       $(X11RDPBASE)/damageext/.libs/libdamageext.a \
+       $(X11RDPBASE)/dbe/.libs/libdbe.a \
+       $(X11RDPBASE)/dri3/.libs/libdri3.a \
+       $(X11RDPBASE)/dix/.libs/libdix.a \
+       $(X11RDPBASE)/exa/.libs/libexa.a \
+       $(X11RDPBASE)/fb/.libs/libfb.a \
+       $(X11RDPBASE)/fb/.libs/libwfb.a \
+       $(X11RDPBASE)/glamor/.libs/libglamor.a \
+       $(X11RDPBASE)/miext/damage/.libs/libdamage.a \
+       $(X11RDPBASE)/miext/shadow/.libs/libshadow.a \
+       $(X11RDPBASE)/miext/sync/.libs/libsync.a \
+       $(X11RDPBASE)/mi/.libs/libmi.a \
+       $(X11RDPBASE)/os/.libs/libos.a \
+       $(X11RDPBASE)/present/.libs/libpresent.a \
+       $(X11RDPBASE)/randr/.libs/librandr.a \
+       $(X11RDPBASE)/record/.libs/librecord.a \
+       $(X11RDPBASE)/render/.libs/librender.a \
+       $(X11RDPBASE)/xfixes/.libs/libxfixes.a \
+       $(X11RDPBASE)/Xi/.libs/libXi.a \
+       $(X11RDPBASE)/xkb/.libs/libxkb.a \
+        librdp.a
 
 LLIBS = -Wl,-rpath=$(LIBBASE) -lfreetype -lz -lm -lXfont -lXau \
-	-lXdmcp -lpixman-1 -lrt -ldl -lcrypto -lGL -lXdamage
+        -lXdmcp -lpixman-1 -lrt -ldl -lcrypto -lGL -lXdamage -lgcrypt -lpthread
 
 CFLAGS = -O2 -Wall -fno-strength-reduce \
+    -march=native -g \
 	-I../../include \
 	-I../../cfb \
 	-I../../mfb \
 	-I../../mi \
+    -I$(XSRCBASE)/include \
+    -I$(XSRCBASE)/Xext \
+    -I$(XSRCBASE)/mi \
+    -I$(XSRCBASE)/render \
+    -I$(XSRCBASE)/randr \
+    -I$(XSRCBASE)/fb \
+    -I/usr/include/pixman-1 \
 	-I$(INCBASE) \
 	-I$(INCBASE)/X11 \
 	-I$(INCBASE)/X11/fonts \
 	-I$(INCBASE)/X11/extensions \
 	-I$(INCBASE)/xorg \
 	-I$(INCBASE)/pixman-1 \
+    -I../xrdp/common \
 	-I../../os \
 	-I../../render \
 	-I../xfree86/common \
 	-I../xfree86/os-support \
 	-I../../../common \
+    -I/usr/include/xorg \
 	-D_POSIX_C_SOURCE=199309L -D_SVID_SOURCE -D_REENTRANT \
 	-DGLX_USE_MESA -DXRECORD -D_GNU_SOURCE -DXAPPGROUP \
 	-DTOGCUP -DSINGLEDEPTH -DXFree86Server \
@@ -67,11 +88,13 @@ CFLAGS = -O2 -Wall -fno-strength-reduce
 	-DPART_NET -DDDXTIME -D_HAVE_XALLOC_DECLS \
 	-DDAMAGE \
 	-DXFIXES \
-	-DSMART_SCHEDULE -DSERVER_LOCK -DGLXEXT -DSHAPE -DRENDER -DRANDR \
+    -DSMART_SCHEDULE -DSERVER_LOCK -DGLXEXT -DGLXEXT_RDP -DSHAPE -DRENDER -DRANDR \
 	-DBIGREQS -D_POSIX_SOURCE -D_BSD_SOURCE -DSCREENSAVER \
 	-DXCMISC -DXTEST -DXTRAP -DXV -DXSYNC -DMITMISC -DPANORAMIX \
 	-DDPMSExtension -DXvExtension -DXvMCExtension -DXResExtension \
-	-DMITSHM -DPIXPRIV -DNDEBUG -DDDXOSINIT -DXKB -DXINPUT
+    -DMITSHM -DPIXPRIV -DNDEBUG -DDDXOSINIT -DXKB -DXINPUT \
+    -DHAVE_STRNDUP -DSECURITY -DCOMPOSITE -DXF86DRI -DDRI2 -DDRI3 -DGLAMOR -DPRESENT \
+    -DHASXDMAUTH -DRES -DXACE -DXV -DXFreeXDGA -DXCMISC
 
 #-DDAMAGE
 
@@ -90,26 +113,24 @@ CFLAGS = -O2 -Wall -fno-strength-reduce
 # these are not needed I think
 # -Dlinux -D__i386__
 
-LDFLAGS = -L$(LIBBASE) -Wl,-rpath,$(LIBBASE)
+#LDFLAGS = -L$(LIBBASE) -Wl,-rpath,$(LIBBASE)
+LDFLAGS = -g
 
 all: X11rdp
 
 X11rdp: $(OBJS)
 	$(AR) rvu librdp.a $(OBJS)
 	ranlib librdp.a
-	$(CC) $(LDFLAGS) -o X11rdp $(LIBS) $(LIBS) $(LLIBS)
+	$(CC) $(LDFLAGS) -o X11rdp $(X11RDPBASE)/dix/.libs/libmain.a $(LIBS) $(LIBS) $(LLIBS)
 
 clean:
 	rm -f $(OBJS) librdp.a
 
-miinitext.o: ../build_dir/xorg-server-1.9.3/mi/miinitext.c Makefile
-	$(CC) $(CFLAGS) -I../build_dir/xorg-server-1.9.3/Xext -c ../build_dir/xorg-server-1.9.3/mi/miinitext.c
-
-fbcmap.o: ../build_dir/xorg-server-1.9.3/fb/fbcmap.c
-	$(CC) $(CFLAGS) -c ../build_dir/xorg-server-1.9.3/fb/fbcmap.c
+miinitext.o: $(XSRCBASE)/mi/miinitext.c Makefile
+	$(CC) $(CFLAGS) -I$(XSRCBASE)/Xext -c $(XSRCBASE)/mi/miinitext.c
 
-fbcmap_mi.o: ../build_dir/xorg-server-1.9.3/fb/fbcmap_mi.c
-	$(CC) $(CFLAGS) -c ../build_dir/xorg-server-1.9.3/fb/fbcmap_mi.c
+fbcmap_mi.o: $(XSRCBASE)/fb/fbcmap_mi.c
+	$(CC) $(CFLAGS) -c $(XSRCBASE)/fb/fbcmap_mi.c
 
 install: all
 	$(INSTALL) X11rdp $(X11RDPBASE)/bin/X11rdp
Index: xrdp-bartw72/xorg/X11R7.6/rdp/rdpdraw.c
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/rdpdraw.c
+++ xrdp-bartw72/xorg/X11R7.6/rdp/rdpdraw.c
@@ -399,7 +399,7 @@ rdpCloseScreen(int i, ScreenPtr pScreen)
     //pScreen->PaintWindowBorder = g_rdpScreen.PaintWindowBorder;
     pScreen->CopyWindow = g_rdpScreen.CopyWindow;
     pScreen->ClearToBackground = g_rdpScreen.ClearToBackground;
-    pScreen->RestoreAreas = g_rdpScreen.RestoreAreas;
+    //pScreen->RestoreAreas = g_rdpScreen.RestoreAreas;
     return 1;
 }
 
@@ -1186,8 +1186,8 @@ rdpRestoreAreas(WindowPtr pWin, RegionPt
     LLOGLN(0, ("in rdpRestoreAreas"));
     RegionInit(&reg, NullBox, 0);
     RegionCopy(&reg, prgnExposed);
-    g_pScreen->RestoreAreas = g_rdpScreen.RestoreAreas;
-    rv = g_pScreen->RestoreAreas(pWin, prgnExposed);
+    //g_pScreen->RestoreAreas = g_rdpScreen.RestoreAreas;
+    //rv = g_pScreen->RestoreAreas(pWin, prgnExposed);
 
     if (g_do_dirty_ons)
     {
@@ -1207,8 +1207,9 @@ rdpRestoreAreas(WindowPtr pWin, RegionPt
     }
 
     RegionUninit(&reg);
-    g_pScreen->RestoreAreas = rdpRestoreAreas;
-    return rv;
+    //g_pScreen->RestoreAreas = rdpRestoreAreas;
+    //return rv;
+    return prgnExposed;
 }
 
 /******************************************************************************/
Index: xrdp-bartw72/xorg/X11R7.6/rdp/rdpinput.c
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/rdpinput.c
+++ xrdp-bartw72/xorg/X11R7.6/rdp/rdpinput.c
@@ -736,13 +736,12 @@ rdpSpriteDeviceCursorCleanup(DeviceIntPt
 
 /******************************************************************************/
 static void
-rdpEnqueueMotion(int x, int y)
+rdpEnqueueMotion(int mode, double x, double y)
 {
     int i;
     int n;
-    int valuators[2];
-    EventListPtr rdp_events;
-    xEvent *pev;
+    InternalEvent* rdp_events;
+    ValuatorMask *mask = valuator_mask_new(2);
 
 # if 0
 
@@ -754,20 +753,21 @@ rdpEnqueueMotion(int x, int y)
     }
 
 #endif
-    miPointerSetPosition(g_pointer, &x, &y);
-    valuators[0] = x;
-    valuators[1] = y;
+    miPointerSetPosition(g_pointer, mode, &x, &y);
+    valuator_mask_set_double(mask, 0, x);
+    valuator_mask_set_double(mask, 1, y);
 
-    GetEventList(&rdp_events);
+    rdp_events = InitEventList(GetMaximumEventsNum() + 1);
     n = GetPointerEvents(rdp_events, g_pointer, MotionNotify, 0,
-                         POINTER_ABSOLUTE | POINTER_SCREEN,
-                         0, 2, valuators);
+                         POINTER_ABSOLUTE | POINTER_SCREEN, mask);
 
     for (i = 0; i < n; i++)
     {
-        pev = (rdp_events + i)->event;
-        mieqEnqueue(g_pointer, (InternalEvent *)pev);
+        mieqEnqueue(g_pointer, &rdp_events[i]);
     }
+
+    valuator_mask_free(&mask);
+    FreeEventList(rdp_events, GetMaximumEventsNum());
 }
 
 /******************************************************************************/
@@ -776,17 +776,17 @@ rdpEnqueueButton(int type, int buttons)
 {
     int i;
     int n;
-    EventListPtr rdp_events;
-    xEvent *pev;
+    InternalEvent* rdp_events;
 
-    i = GetEventList(&rdp_events);
-    n = GetPointerEvents(rdp_events, g_pointer, type, buttons, 0, 0, 0, 0);
+    rdp_events = InitEventList(GetMaximumEventsNum() + 1);
+    n = GetPointerEvents(rdp_events, g_pointer, type, buttons, 0, NULL);
 
     for (i = 0; i < n; i++)
     {
-        pev = (rdp_events + i)->event;
-        mieqEnqueue(g_pointer, (InternalEvent *)pev);
+        mieqEnqueue(g_pointer, &rdp_events[i]);
     }
+
+    FreeEventList(rdp_events, GetMaximumEventsNum());
 }
 
 /******************************************************************************/
@@ -795,28 +795,28 @@ rdpEnqueueKey(int type, int scancode)
 {
     int i;
     int n;
-    EventListPtr rdp_events;
-    xEvent *pev;
+    InternalEvent* rdp_events;
 
-    i = GetEventList(&rdp_events);
-    n = GetKeyboardEvents(rdp_events, g_keyboard, type, scancode);
+    rdp_events = InitEventList(GetMaximumEventsNum() + 1);
+    n = GetKeyboardEvents(rdp_events, g_keyboard, type, scancode, NULL);
 
     for (i = 0; i < n; i++)
     {
-        pev = (rdp_events + i)->event;
-        mieqEnqueue(g_keyboard, (InternalEvent *)pev);
+        mieqEnqueue(g_keyboard, &rdp_events[i]);
     }
+
+    FreeEventList(rdp_events, GetMaximumEventsNum());
 }
 
 /******************************************************************************/
 void
-PtrAddEvent(int buttonMask, int x, int y)
+PtrAddEvent(int buttonMask, int mode, double x, double y)
 {
     int i;
     int type;
     int buttons;
 
-    rdpEnqueueMotion(x, y);
+    rdpEnqueueMotion(mode, x, y);
 
     for (i = 0; i < 5; i++)
     {
Index: xrdp-bartw72/xorg/X11R7.6/rdp/rdpmain.c
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/rdpmain.c
+++ xrdp-bartw72/xorg/X11R7.6/rdp/rdpmain.c
@@ -167,11 +167,11 @@ set_bpp(int bpp)
 
 /******************************************************************************/
 static void
-rdpWakeupHandler(int i, pointer blockData, unsigned long err,
+rdpWakeupHandler(pointer blockData, unsigned long err,
                  pointer pReadmask)
 {
     g_pScreen->WakeupHandler = g_rdpScreen.WakeupHandler;
-    g_pScreen->WakeupHandler(i, blockData, err, pReadmask);
+    g_pScreen->WakeupHandler(blockData, err, pReadmask);
     g_pScreen->WakeupHandler = rdpWakeupHandler;
 }
 
@@ -225,7 +225,7 @@ rdpDestroyColormap(ColormapPtr pColormap
 /******************************************************************************/
 /* returns boolean, true if everything is ok */
 static Bool
-rdpScreenInit(int index, ScreenPtr pScreen, int argc, char **argv)
+rdpScreenInit(ScreenPtr pScreen, int argc, char **argv)
 {
     int dpix;
     int dpiy;
@@ -273,7 +273,7 @@ rdpScreenInit(int index, ScreenPtr pScre
         g_rdpScreen.sizeInBytes =
             (g_rdpScreen.paddedWidthInBytes * g_rdpScreen.height);
         ErrorF("buffer size %d\n", g_rdpScreen.sizeInBytes);
-        g_rdpScreen.pfbMemory = (char *)g_malloc(2048 * 2048 * 4, 1);
+        g_rdpScreen.pfbMemory = (char *)g_malloc(g_rdpScreen.sizeInBytes, 1);
     }
 
     if (g_rdpScreen.pfbMemory == 0)
@@ -327,7 +327,7 @@ rdpScreenInit(int index, ScreenPtr pScre
         return 0;
     }
 
-    miInitializeBackingStore(pScreen);
+//    miInitializeBackingStore(pScreen);
 
     /* this is for rgb, not bgr, just doing rgb for now */
     vis = g_pScreen->visuals + (g_pScreen->numVisuals - 1);
@@ -387,7 +387,7 @@ rdpScreenInit(int index, ScreenPtr pScre
     g_rdpScreen.ClearToBackground = pScreen->ClearToBackground;
 
     /* Backing store procedures */
-    g_rdpScreen.RestoreAreas = pScreen->RestoreAreas;
+    //g_rdpScreen.RestoreAreas = pScreen->RestoreAreas;
     g_rdpScreen.WakeupHandler = pScreen->WakeupHandler;
 
     g_rdpScreen.CreateColormap = pScreen->CreateColormap;
@@ -441,7 +441,7 @@ rdpScreenInit(int index, ScreenPtr pScre
     pScreen->ClearToBackground = rdpClearToBackground;
 
     /* Backing store procedures */
-    pScreen->RestoreAreas = rdpRestoreAreas;
+    //pScreen->RestoreAreas = rdpRestoreAreas;
 
 #if 0
     pScreen->CreateColormap = rdpCreateColormap;
@@ -644,6 +644,7 @@ void
 InitOutput(ScreenInfo *screenInfo, int argc, char **argv)
 {
     int i;
+    ExtensionModule *newext;
 
     ErrorF("InitOutput:\n");
     g_initOutputCalled = 1;
@@ -695,7 +696,7 @@ InitInput(int argc, char **argv)
 
 /******************************************************************************/
 void
-ddxGiveUp(void)
+ddxGiveUp(enum ExitCode error)
 {
     char unixSocketName[128];
 
@@ -740,14 +741,14 @@ rfbRootPropertyChange(PropertyPtr pProp)
 
 /******************************************************************************/
 void
-AbortDDX(void)
+AbortDDX(enum ExitCode error)
 {
-    ddxGiveUp();
+    ddxGiveUp(error);
 }
 
 /******************************************************************************/
 void
-OsVendorFatalError(void)
+OsVendorFatalError(const char *f, va_list args)
 {
 }
 
Index: xrdp-bartw72/xorg/X11R7.6/rdp/rdpup.c
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/rdpup.c
+++ xrdp-bartw72/xorg/X11R7.6/rdp/rdpup.c
@@ -670,47 +670,47 @@ rdpup_process_msg(struct stream *s)
                    past the width or height */
                 g_cursor_x = l_bound_by(param1, 0, g_rdpScreen.width - 2);
                 g_cursor_y = l_bound_by(param2, 0, g_rdpScreen.height - 2);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 101:
                 g_button_mask = g_button_mask & (~1);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 102:
                 g_button_mask = g_button_mask | 1;
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 103:
                 g_button_mask = g_button_mask & (~4);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 104:
                 g_button_mask = g_button_mask | 4;
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 105:
                 g_button_mask = g_button_mask & (~2);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 106:
                 g_button_mask = g_button_mask | 2;
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 107:
                 g_button_mask = g_button_mask & (~8);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 108:
                 g_button_mask = g_button_mask | 8;
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 109:
                 g_button_mask = g_button_mask & (~16);
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 110:
                 g_button_mask = g_button_mask | 16;
-                PtrAddEvent(g_button_mask, g_cursor_x, g_cursor_y);
+                PtrAddEvent(g_button_mask, Absolute, g_cursor_x, g_cursor_y);
                 break;
             case 200:
                 rdpup_begin_update();
Index: xrdp-bartw72/xup/xup.c
===================================================================
--- xrdp-bartw72.orig/xup/xup.c
+++ xrdp-bartw72/xup/xup.c
@@ -19,6 +19,11 @@
  */
 
 #include "xup.h"
+#include "log.h"
+#include <stdlib.h>
+#include <errno.h>
+#include <unistd.h>
+#include <sys/types.h>
 
 /******************************************************************************/
 /* returns error */
@@ -180,10 +185,12 @@ lib_mod_connect(struct mod *mod)
     {
         if (use_uds)
         {
+            mod->server_msg(mod, "Use local sockets", 0);
             mod->sck = g_tcp_local_socket();
         }
         else
         {
+            mod->server_msg(mod, "Use tcp sockets", 0);
             mod->sck = g_tcp_socket();
             g_tcp_set_non_blocking(mod->sck);
             g_tcp_set_no_delay(mod->sck);
@@ -202,6 +209,7 @@ lib_mod_connect(struct mod *mod)
 
         if (error == -1)
         {
+            log_message(LOG_LEVEL_INFO, "Error during connect err=%d on sck=%d and port=%s for uid=%d", errno,  mod->sck, con_port, getuid());
             if (g_tcp_last_error_would_block(mod->sck))
             {
                 error = 0;
Index: xrdp-bartw72/xorg/X11R7.6/rdp/rdprandr.c
===================================================================
--- xrdp-bartw72.orig/xorg/X11R7.6/rdp/rdprandr.c
+++ xrdp-bartw72/xorg/X11R7.6/rdp/rdprandr.c
@@ -156,6 +156,13 @@ rdpRRScreenSetSize(ScreenPtr pScreen, CA
         ErrorF("  resizing screenPixmap [%p] to %dx%d, currently at %dx%d\n",
                (void *)screenPixmap, width, height,
                screenPixmap->drawable.width, screenPixmap->drawable.height);
+        if (g_rdpScreen.sizeInBytes > g_rdpScreen.sizeInBytesAlloc)
+        {
+            g_free(g_rdpScreen.pfbMemory);
+            g_rdpScreen.pfbMemory = (char*)g_malloc(g_rdpScreen.sizeInBytes, 1);
+            g_rdpScreen.sizeInBytesAlloc = g_rdpScreen.sizeInBytes;
+            ErrorF("new buffer size %d\n", g_rdpScreen.sizeInBytes);
+        }
         pScreen->ModifyPixmapHeader(screenPixmap, width, height,
                                     g_rdpScreen.depth, g_rdpScreen.bitsPerPixel,
                                     g_rdpScreen.paddedWidthInBytes,
